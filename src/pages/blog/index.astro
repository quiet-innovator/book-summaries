---
import BaseHead from '../../components/BaseHead.astro';
import Header from '../../components/Header.astro';
import Footer from '../../components/Footer.astro';
import { SITE_TITLE, SITE_DESCRIPTION } from '../../consts';
import { getCollection } from 'astro:content';
import FormattedDate from '../../components/FormattedDate.astro';

const posts = (await getCollection('blog')).sort(
  (a, b) => b.data.pubDate.valueOf() - a.data.pubDate.valueOf(),
);

const postSlugs = posts.map(post => `/blog/${post.id}/`);
---

<!doctype html>
<html lang="en">
  <head>
    <BaseHead title={SITE_TITLE} description={SITE_DESCRIPTION} />
    <style>
      main {
        width: 960px;
        margin: 0 auto;
      }

      .search-bar {
        width: 100%;
        padding: 0.75rem;
        margin-bottom: 1rem;
        font-size: 1rem;
        border: 1px solid #ccc;
        border-radius: 8px;
        outline: none;
      }

      .search-bar:focus {
        border-color: #0070f3;
        box-shadow: 0 0 0 2px rgba(0,112,243,0.2);
      }

      .random-btn {
        display: inline-block;
        background-color: #0070f3;
        color: white;
        border: none;
        padding: 0.6rem 1rem;
        border-radius: 8px;
        font-size: 1rem;
        margin-bottom: 1.5rem;
        cursor: pointer;
        transition: background-color 0.2s ease;
      }

      .random-btn:hover {
        background-color: #005ad1;
      }

      .tags {
        margin-top: 0.5rem;
        display: flex;
        flex-wrap: wrap;
        gap: 0.4rem;
      }

      .tag {
        background-color: #eee;
        padding: 0.25rem 0.6rem;
        border-radius: 16px;
        font-size: 0.75rem;
        color: #333;
        text-transform: capitalize;
      }

      ul {
        display: flex;
        flex-wrap: wrap;
        gap: 2rem;
        list-style-type: none;
        margin: 0;
        padding: 0;
      }

      ul li {
        width: calc(50% - 1rem);
      }

      ul li:first-child {
        width: 100%;
        margin-bottom: 1rem;
        text-align: center;
      }

      ul li:first-child img {
        width: 100%;
      }

      ul li:first-child .title {
        font-size: 2.369rem;
      }

      ul li img {
        margin-bottom: 0.5rem;
        border-radius: 12px;
      }

      ul li a {
        display: block;
        text-decoration: none;
      }

      .title {
        margin: 0;
        color: rgb(var(--black));
        line-height: 1;
      }

      .date {
        margin: 0;
        color: rgb(var(--gray));
      }

      ul li a:hover h4,
      ul li a:hover .date {
        color: rgb(var(--accent));
      }

      ul a:hover img {
        box-shadow: var(--box-shadow);
      }

      @media (max-width: 720px) {
        ul {
          gap: 0.5em;
        }
        ul li {
          width: 100%;
          text-align: center;
        }
        ul li:first-child {
          margin-bottom: 0;
        }
        ul li:first-child .title {
          font-size: 1.563em;
        }
      }
    </style>
  </head>
  <body>
    <Header />
    <main>
      <section>
        <input
          id="search"
          type="text"
          placeholder="Search book summaries..."
          class="search-bar"
          oninput="filterPosts()" />

        <button class="random-btn" onclick="goToRandomPost()">ðŸŽ² Random Book</button>

        <ul id="postList">
          {
            posts.map((post) => (
              <li class="post-item"
                  data-title={post.data.title.toLowerCase()}
                  data-description={post.data.description?.toLowerCase() || ''}>
                <a href={`/blog/${post.id}/`}>
                  <img width={720} height={360} src={post.data.heroImage} alt="" />
                  <h4 class="title">{post.data.title}</h4>
                  <p class="date">
                    <FormattedDate date={post.data.pubDate} />
                  </p>
                  {post.data.tags && (
                    <p class="tags">
                      {post.data.tags.map(tag => (
                        <span class="tag">{tag}</span>
                      ))}
                    </p>
                  )}
                </a>
              </li>
            ))
          }
        </ul>

        <script is:inline>
          const postUrls = JSON.parse(`${JSON.stringify(postSlugs)}`);

          function goToRandomPost() {
            const randomIndex = Math.floor(Math.random() * postUrls.length);
            window.location.href = postUrls[randomIndex];
          }

          function filterPosts() {
            const input = document.getElementById("search").value.toLowerCase();
            const items = document.querySelectorAll("#postList .post-item");

            items.forEach(item => {
              const title = item.getAttribute("data-title");
              const desc = item.getAttribute("data-description");
              const visible = title.includes(input) || desc.includes(input);
              item.style.display = visible ? "" : "none";
            });
          }
        </script>
      </section>
    </main>
    <Footer />
  </body>
</html>

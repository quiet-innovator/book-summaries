export async function POST({ request }) {
  const { slug } = await request.json();

  // âœ… Place these at the top of the function body
  const SUPABASE_URL = import.meta.env.SUPABASE_URL;
  const SUPABASE_ANON_KEY = import.meta.env.SUPABASE_ANON_KEY;

  // Check if slug already exists
  const getRes = await fetch(`${SUPABASE_URL}/rest/v1/views?slug=eq.${slug}`, {
    headers: {
      apikey: SUPABASE_ANON_KEY,
      Authorization: `Bearer ${SUPABASE_ANON_KEY}`,
      Prefer: "return=representation"
    }
  });

  const data = await getRes.json();

  if (data.length > 0) {
    // Update existing view count
    await fetch(`${SUPABASE_URL}/rest/v1/views?slug=eq.${slug}`, {
      method: "PATCH",
      headers: {
        apikey: SUPABASE_ANON_KEY,
        Authorization: `Bearer ${SUPABASE_ANON_KEY}`,
        "Content-Type": "application/json"
      },
      body: JSON.stringify({ views: data[0].views + 1 })
    });
  } else {
    // Create new view record
    await fetch(`${SUPABASE_URL}/rest/v1/views`, {
      method: "POST",
      headers: {
        apikey: SUPABASE_ANON_KEY,
        Authorization: `Bearer ${SUPABASE_ANON_KEY}`,
        "Content-Type": "application/json"
      },
      body: JSON.stringify({ slug, views: 1 })
    });
  }

  return new Response(JSON.stringify({ status: "ok" }), { status: 200 });
}

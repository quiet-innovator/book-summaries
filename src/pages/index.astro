---
import BaseHead from '../../components/BaseHead.astro';
import Header from '../../components/Header.astro';
import Footer from '../../components/Footer.astro';
import { SITE_TITLE, SITE_DESCRIPTION } from '../../consts';
import { getCollection } from 'astro:content';
import FormattedDate from '../../components/FormattedDate.astro';

const SUPABASE_URL = "https://anvbsqdzosqyqggrzsxq.supabase.co";
const SUPABASE_ANON_KEY = "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpc3MiOiJzdXBhYmFzZSIsInJlZiI6ImFudmJzcWR6b3NxeXFnZ3J6c3hxIiwicm9sZSI6ImFub24iLCJpYXQiOjE3NDM3MzA5ODgsImV4cCI6MjA1OTMwNjk4OH0.a12c2LIuIH_f2GFF1BUy823EqY3jm0mxJWyk1hkT0xk";

let posts = await getCollection('blog');

async function fetchViews(slug) {
  try {
    const response = await fetch(`${SUPABASE_URL}/rest/v1/views?slug=eq.${slug}`, {
      headers: {
        apikey: SUPABASE_ANON_KEY,
        Authorization: `Bearer ${SUPABASE_ANON_KEY}`
      }
    });
    const data = await response.json();
    return data.length > 0 ? data[0].views : 0;
  } catch (e) {
    console.error('Failed to fetch views for', slug, e);
    return 0;
  }
}

posts = await Promise.all(posts.map(async (post) => {
  const views = await fetchViews(post.id);
  return { ...post, data: { ...post.data, views } };
}));

const postSlugs = posts.map(post => `/blog/${post.id}/`);
---

<!doctype html>
<html lang="en">
  <head>
    <BaseHead title={SITE_TITLE} description={SITE_DESCRIPTION} />
    <!-- styles remain unchanged -->
  </head>
  <body>
    <Header />
    <main>
      <section>
        <!-- controls and filter markup remain unchanged -->
        <ul id="postList">
          {posts.map((post) => (
            <li class="post-item"
                data-title={post.data.title.toLowerCase()}
                data-description={post.data.description?.toLowerCase() || ''}
                data-tags={post.data.tags?.join(',') || ''}
                data-views={post.data.views || 0}
                data-date={post.data.pubDate}>
              <a href={`/blog/${post.id}/`} onclick="trackView('/blog/${post.id}/')">
                <img width={720} height={360} src={post.data.heroImage} alt="" />
                <h4 class="title">{post.data.title}</h4>
                <p class="date">
                  <FormattedDate date={post.data.pubDate} />
                </p>
                <p>üëÅÔ∏è {post.data.views} views</p>
                {post.data.tags && (
                  <p class="tags">
                    {post.data.tags.map(tag => (
                      <span class="tag">{tag}</span>
                    ))}
                  </p>
                )}
              </a>
            </li>
          ))}
        </ul>
        <!-- scripts remain unchanged -->
      </section>
    </main>
    <Footer />
  </body>
</html>
